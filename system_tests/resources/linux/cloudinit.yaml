tosca_definitions_version: cloudify_dsl_1_3

imports:
  - http://www.getcloudify.org/spec/cloudify/4.5/types.yaml
  - https://raw.githubusercontent.com/cloudify-incubator/cloudify-utilities-plugin/1.13.0/plugin.yaml
  - ../../../plugin.yaml

inputs:

  vcenter_user:
    type: string

  vcenter_password:
    type: string

  vcenter_ip:
    type: string

  vcenter_port:
    type: string
    default: 443

  vcenter_datacenter:
    type: string
    description: >
       vcenter datacenter
    default: Datacenter

  vcenter_resource_pool:
    description: >
      Resource pool name
    default: Resources

  vsphere_auto_placement:
    type: string
    default: true

  template_name:
    type: string
    description: >
      "CentOS 7 template name"
    default: "CentOS-7.6-Cloud-Init-tmpl"

  vcenter_datastore:
    type: string
    description: >
      vcenter datastore
    default: datastore1

  allowed_hosts:
    default: []

  allowed_clusters:
    default: []

  allowed_datastores:
    default: []

  test_network_name:
    description: >
      The name to give to the new test network
    type: string
    default: systestnetwork

  test_network_distributed:
    description: >
      Whether the test network is distributed
    type: boolean
    default: false

  test_network_vlan:
    description: >
      Which VLAN to use for the test network.
      It is not recommended that this is set to 1
    type: integer
    default: 404

  test_network_vswitch:
    description: >
      The vswitch/dvswitch to attach this portgroup (network) to
    type: string
    default: vSwitch0
    #default: dvSwitch

###############################################################################
#  DSL section
###############################################################################
dsl_definitions:

  connection_config: &connection_config
    username: { get_input: vcenter_user }
    password: {get_input: vcenter_password }
    host: { get_input: vcenter_ip }
    port: { get_input: vcenter_port }
    datacenter_name: {get_input: vcenter_datacenter }
    resource_pool_name: { get_input: vcenter_resource_pool }
    auto_placement: { get_input: vsphere_auto_placement }
    allow_insecure: true

node_types:

  host:
    derived_from: cloudify.vsphere.nodes.Server
    properties:
      vm_folder:
        default: vm
      connection_config:
        default: *connection_config
      os_family:
        default: other
      allowed_hosts:
        default: { get_input: allowed_hosts }
      allowed_clusters:
        default: { get_input: allowed_clusters }
      allowed_datastores:
        default: { get_input: allowed_datastores }
      server:
        default:
          name: other_vm
          template: { get_input: template_name }
          cpus: 1
          memory: 1024
      agent_config:
        default:
          install_method: none
      networking:
        default:
          connect_networks:
            - name: { get_input: test_network_name }

node_templates:

  cloud_init:
    type: cloudify.nodes.CloudInit.CloudConfig
    properties:
      resource_config:
        password: passw0rd
        chpasswd:
           expire: False
        ssh_pwauth: True

  cloud_init_image:
    type: cloudify.vsphere.nodes.CloudInitISO
    properties:
      connection_config: *connection_config
      datacenter_name: { get_input: vcenter_datacenter }
    interfaces:
      cloudify.interfaces.lifecycle:
        create:
          inputs:
            allowed_datastores:
            - { get_input: vcenter_datastore }
            vol_ident: cidata
            files:
              user-data: { get_attribute: [cloud_init, cloud_config ] }
              meta-data: >
                instance-id: localhost
    relationships:
    - target: cloud_init
      type: cloudify.relationships.depends_on

  network:
    type: cloudify.vsphere.nodes.Network
    properties:
      network:
        name: { get_input: test_network_name }
        switch_distributed: { get_input: test_network_distributed }
        vlan_id: { get_input: test_network_vlan }
        vswitch_name: { get_input: test_network_vswitch }
      connection_config: *connection_config

  ippool:
    type: cloudify.vsphere.nodes.IPPool
    properties:
      datacenter_name: { get_input: vcenter_datacenter }
      ippool:
        name: ippool-check
        subnet: 10.0.0.0
        netmask: 255.255.255.0
        gateway: 10.0.0.254
        range: 10.0.0.1#12
      connection_config: *connection_config
    relationships:
    - target: network
      type: cloudify.relationships.vsphere.ippool_connected_to_network

  network_reuse:
    type: cloudify.vsphere.nodes.Network
    properties:
      use_external_resource: true
      network:
        name: { get_input: test_network_name }
        switch_distributed: { get_input: test_network_distributed }
      connection_config: *connection_config
    relationships:
    - target: network
      type: cloudify.relationships.depends_on
    - target: ippool
      type: cloudify.relationships.depends_on

  vm_base:
    type: host
    interfaces:
      cloudify.interfaces.lifecycle:
        start:
          inputs:
            cdrom_image: { get_attribute: [cloud_init_image, storage_image ] }
    relationships:
    - target: cloud_init_image
      type: cloudify.relationships.depends_on
    - target: network_reuse
      type: cloudify.relationships.depends_on
