version: 2.1

unittest-post-steps: &unittest-post-steps
  post-steps:
    - store_test_results:
        path: /home/circleci/project/nosetests.xml
    - store_artifacts:
        path: /home/circleci/project/coverage.xml
        prefix: tests
    - slack/notify_failed

orbs:
  node: cloudify/public-unittest-orb@volatile
  wagonorb: cloudify/wagon-bulder-orb@volatile
  releaseorb: cloudify/release-orb@volatile
  managerorb: cloudify/manager-orb@volatile
  slack: cloudify/notify-slack@2

checkout:
  post:
    - >
      if [ -n "$CI_PULL_REQUEST" ]; then
        PR_ID=${CI_PULL_REQUEST##*/}
        git fetch origin +refs/pull/$PR_ID/merge:
        git checkout -qf FETCH_HEAD
      fi

jobs:

  unittest:
    docker:
      - image: cimg/python:3.6
    steps:
      - checkout
      - run:
          name: upgrade pip
          command: pip install --upgrade pip
      - run:
          name: upgrade setuptools
          command: pip install --upgrade setuptools
      - run:
          name: Git checkout
          command: git checkout ${CIRCLE_BRANCH}
      - run:
          name: Add Submodules
          command: git submodule update --init --recursive
      - run:
          name: Install tox
          command: pip install tox
      - run:
          name: Install flake8
          command: pip install flake8
      - run:
          name: Install nose
          command: pip install nose pytest mock nose-cov nose-exclude pyfakefs
      - run:
          name: Flake8
          command: |
            flake8 cloudify_vsphere
            flake8 vsphere_network_plugin
            flake8 vsphere_plugin_common
            flake8 vsphere_server_plugin
            flake8 vsphere_storage_plugin
      - run:
          name: Install current project
          command: pip install -e .
      - run:
          name: nosetests
          command: |
            nosetests --exclude-dir=vsphere_plugin_common/tests/utils --cover-html --with-coverage --cover-package=vsphere_plugin_common --with-xunit --xunit-file=nosetests.xml --cover-xml --cover-xml-file=coverage.xml  vsphere_plugin_common
            nosetests --cover-html --with-coverage --cover-package=vsphere_server_plugin --with-xunit --xunit-file=nosetests.xml --cover-xml --cover-xml-file=coverage.xml vsphere_server_plugin
            nosetests --cover-html --with-coverage --cover-package=vsphere_network_plugin --with-xunit --xunit-file=nosetests.xml --cover-xml --cover-xml-file=coverage.xml vsphere_network_plugin
            nosetests --cover-html --with-coverage --cover-package=vsphere_storage_plugin --with-xunit --xunit-file=nosetests.xml --cover-xml --cover-xml-file=coverage.xml vsphere_storage_plugin
            nosetests --cover-html --with-coverage --cover-package=cloudify_vsphere --with-xunit --xunit-file=nosetests.xml --cover-xml --cover-xml-file=coverage.xml cloudify_vsphere
            pytest -s vsphere_plugin_common/tests/utils/op_test.py


workflows:
  version: 2.1
  tests:
    jobs:
      - node/check_py3_compat_job
      - unittest
      - node/validate_version_job
      - node/validate_documentation_job
      - wagonorb/wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - wagonorb/arch64_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master|dev)/
      - wagonorb/rhel_wagon:
          filters:
            branches:
              only: /([0-9\.]*\-build|master)/
      - releaseorb/release:
          filters:
            branches:
              only: /master/
          requires:
            - wagonorb/wagon
            - wagonorb/arch64_wagon
            - wagonorb/rhel_wagon
            - node/validate_version_job
            - node/validate_documentation_job
      - releaseorb/merge_docs_job:
          filters:
            branches:
              only: /master/
          requires:
            - releaseorb/release
            - node/validate_documentation_job

  nightly:
    triggers:
    - schedule:
        cron: "0 1 * * 0,1,3,5"
        filters:
          branches:
            only:
              - master
    jobs:
      - node/check_py3_compat_job
      - node/validate_version_job
      - unittest
